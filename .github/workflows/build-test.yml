name: Build OpenWRT package (test)

on:
  workflow_dispatch:
    inputs:
      openwrt_version:
        description: 'OpenWrt version to test'
        required: true
        default: 'both'
        type: choice
        options:
        # - '23.05'
        - '24.10'
        # - 'both'
      verbose:
        description: 'Verbose build output'
        required: false
        default: false
        type: boolean

jobs:
  build-test:
    name: Build Test - OpenWrt ${{ matrix.openwrt_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # - openwrt_version: '23.05'
          #   arch: 'x86_64-23.05.0'
          - openwrt_version: '24.10'
            arch: 'x86_64-24.10.3'
      fail-fast: false
    
    steps:
      - name: Check if version should be built
        run: |
          # Check if this matrix combination should be built
          if [ "${{ github.event.inputs.openwrt_version }}" != "both" ] && [ "${{ github.event.inputs.openwrt_version }}" != "${{ matrix.openwrt_version }}" ]; then
            echo "Skipping build: OpenWrt version mismatch (requested: ${{ github.event.inputs.openwrt_version }}, matrix: ${{ matrix.openwrt_version }})"
            exit 0
          fi
          
          echo "Proceeding with build for OpenWrt ${{ matrix.openwrt_version }}"
      # - name: Free space
      #   run: |
      #     echo "=============================================================================="
      #     echo "Freeing up disk space on CI system"
      #     echo "=============================================================================="

      #     echo "Listing 100 largest packages"
      #     dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
      #     df -h
      #     echo "Removing large packages"
      #     # sudo apt-get remove -y '^llvm-.*' || true
      #     sudo apt-get remove -y php-common php-pear php8.3 php8.3-amqp php8.3-apcu php8.3-bcmath php8.3-bz2 php8.3-cgi php8.3-cli php8.3-common php8.3-curl php8.3-dba php8.3-dev php8.3-enchant php8.3-fpm php8.3-gd php8.3-gmp php8.3-igbinary php8.3-imagick php8.3-imap php8.3-interbase php8.3-intl php8.3-ldap php8.3-mbstring php8.3-memcache php8.3-memcached php8.3-mongodb php8.3-msgpack php8.3-mysql php8.3-odbc php8.3-opcache php8.3-pcov php8.3-pgsql php8.3-phpdbg php8.3-pspell php8.3-readline php8.3-redis php8.3-snmp php8.3-soap php8.3-sqlite3 php8.3-sybase php8.3-tidy php8.3-xdebug php8.3-xml php8.3-xsl php8.3-yaml php8.3-zip php8.3-zmq
      #     sudo apt-get remove -y microsoft-edge-stable azure-cli google-cloud-cli google-cloud-cli-anthoscli google-chrome-stable firefox powershell
      #     sudo apt-get remove -y 'temurin-*-jdk' 'mysql-server*' humanity-icon-theme
      #     sudo apt-get purge -y google-chrome-stable gh
      #     sudo apt-get autoremove -y
      #     sudo apt-get clean
      #     echo "Listing 100 largest packages"
      #     dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
      #     df -h
      #     echo "Removing large directories"
      #     # deleting 15GB
      #     rm -rf /usr/share/dotnet/
      #     sudo rm -rf /var/lib/apt/lists/*
      #     df -h

      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          path: ${{ github.workspace }}/feed/luci-app-podman
          fetch-depth: 0

      - name: Create artifacts directory structure
        run: |
          mkdir -p ${{ github.workspace }}/artifacts
          
      - name: Build OpenWrt ${{ matrix.openwrt_version }} package
        uses: openwrt/gh-action-sdk@v9
        env:
          ARCH: ${{ matrix.arch }}
          PACKAGES: luci-app-podman
          V: ${{ github.event.inputs.verbose == 'true' && 'sc' || '0' }}
          FEED_DIR: ${{ github.workspace }}/feed
          ARTIFACTS_DIR: ${{ github.workspace }}/artifacts

      - name: Verify package built
        run: find bin/ -name 'luci-app-podman*.ipk' -type f | grep . 